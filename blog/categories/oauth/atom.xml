<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: oauth | masarakki's blog]]></title>
  <link href="http://masarakki.github.com/blog/categories/oauth/atom.xml" rel="self"/>
  <link href="http://masarakki.github.com/"/>
  <updated>2014-02-21T04:43:49+09:00</updated>
  <id>http://masarakki.github.com/</id>
  <author>
    <name><![CDATA[masarakki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[非エンジニアのためのOAuth講座]]></title>
    <link href="http://masarakki.github.com/blog/2014/02/21/oauth-for-non-engineer/"/>
    <updated>2014-02-21T02:00:08+09:00</updated>
    <id>http://masarakki.github.com/blog/2014/02/21/oauth-for-non-engineer</id>
    <content type="html"><![CDATA[<h2>OAuthって何?</h2>

<p>いわゆるこういうのです</p>

<p><img src="/images/oauth_auth.png"></p>

<p>最近Twitterで <strong>スパムアプリがおっぱいポロリと勝手につぶやく</strong> といった事件が世間を賑わせています。
このままでは「OAuthは犯罪です!」なんて言い出す人が現れかねないので、
OAuthってどんなものなのか、Twitterを例に誤解されそうなところを簡単に説明したいと思います。</p>

<h2>誤解1: OAuthはユーザ認証の機能である</h2>

<p>多くのWebサイトに <strong>Twitterでログインする</strong> 機能があり、
上の画面をユーザ認証の仕組みだと思っている人は多いと思いますが、 <strong>大間違いです</strong> 。</p>

<p>OAuthは、他のアプリ(サイト)に対して、自分の代わりにTwitterにアクセスする権利を与える仕組みです。
その過程でユーザ情報がとれるので、ログインの代わりに使っているアプリが多いのですが、本来は間違った使い方です。
他のサービスを使ってユーザ認証をする仕組みに <strong>OpenID</strong> というOAuthの兄弟規格のようなものがあるのですが、
対応しているサービスも少なくイマイチ流行ってません。</p>

<p>何はともあれOAuthの許可をすると、Twitterの操作をする権限をアプリに与えてしまします。
信頼できないアプリに対して許可なんか与えたらダメです。
何ができるかは許可画面に書かれているので <strong>よく読みましょう</strong> 。
上の画像の場合は、</p>

<ul>
<li>tweetが読めるよ</li>
<li>フォローしてる人が見れるよ</li>
<li>プロフィール変更できるよ</li>
<li>tweetできるよ</li>
</ul>


<p>と書かれています。</p>

<p>Twitterは親切で何ができないかも書いてあります。</p>

<ul>
<li>ダイレクトメッセージにはアクセスできないよ</li>
<li>パスワードは見れないよ</li>
</ul>


<p>どこまで権利を欲しがるかはアプリによって違うので <strong>きちんと読みましょう</strong> 。</p>

<h4>まとめ</h4>

<ul>
<li>OAuthは他のアプリに権限を渡す仕組みだよ</li>
<li>許可画面はよく読もう</li>
<li>信頼できないアプリを許可したらダメだよ</li>
</ul>


<h2>誤解2: 念のためパスワード変えたほうがいい</h2>

<p>スパム系アプリが流行すると、パスワード変えたほうがいいという人が必ず現れますが、<strong>全く不要です</strong>。
むしろパスワード変えないとヤバイよと煽って来る人は、
<strong>罠にかけようとしている可能性もあるので警戒したほうがいいです</strong>。</p>

<p>まともなサービスなら、OAuthで許可を得ていても <strong>アプリからパスワードは見えないし変更もできません</strong> 。
そもそもパスワードは元の文字列に復元できない方法でデータベースに保存されています。</p>

<p>アプリとサービスは、OAuthの許可を与えた時に発行される <strong>アクセストークン</strong> という文字列を使ってやりとりします。
なのでアプリはパスワードを一切知ることはないし、知る必要もありません。
もしアプリ側でパスワードを入力させようとしてきたら <strong>完全に罠です</strong>。</p>

<p>アプリの許可を取り消せば、アクセストークンが無効化されて、それ以降アプリはアクセスできなくなります。
あとは勝手にされたtweet消したり勝手にされたフォロー外したりは手動でやる必要があります。</p>

<h4>まとめ</h4>

<ul>
<li>パスワードは変えなくていいよ</li>
<li>許可を取り消せばそれっきりだよ</li>
<li>ビビって騙されないように</li>
</ul>


<h2>誤解3: OAuthは安全である</h2>

<p>条件が揃えば、結構簡単にアプリのなりすましが可能です。(特にスマートフォンアプリ)</p>

<p>アプリにはいくつかOAuthのための設定がありますが、
それを全く同じにして別のアプリを作ると、本物になりすますことが可能です。</p>

<p>信頼できるアプリを許可をしたあと、自動でアプリに戻って来るタイミングで、
<strong>複数のアプリ候補</strong> (Androidの場合 他のOSは知らん) がある場合は、その中に偽物が含まれていると思っていいでしょう。
まだこの時 <strong>アクセストークン</strong> は発行されていないので、ここでストップすれば乗っ取りは防げます。
しかし、もし間違って偽アプリを選んでしまったら、 <strong>偽アプリがアクセストークンを取得してしまいます</strong>。
つまりその瞬間になりすましが成立します。</p>

<p>アプリ選択画面が出てくるのはまだマシな方で、
もしこれが、もう使ってなくて <strong>アンインストールしたアプリ</strong> と同じ設定を使っていた場合、
アプリ選択画面すら出ずに <strong>偽アプリがアクセストークンを取得してなりすまします</strong>。
過去に許可していて、その許可がまだ有効な場合は <strong>許可画面すら出ずに</strong> 偽アプリがなりすますこともあります。</p>

<p>Webアプリの場合はスマートフォンアプリほどなりすましは簡単ではないですが、
<strong>ドメインごと盗まれた場合</strong> はなりすまし可能です。
<strong>信頼できないDNSを使っている場合</strong> もなりすまし可能です。
サービスを運営する会社が <strong>買収された時</strong> は買収会社の動きに注目したほうがいいです。</p>

<p>なりすまされた場合、許可したアプリ一覧に出てくる名前は <strong>信頼できるアプリ</strong> なので、
何が犯人なのかなかなか気づきにくいです。</p>

<h4>まとめ</h4>

<ul>
<li>アプリ候補が複数出たら怪しいからストップしたほうがいいよ</li>
<li>アプリを消したら許可も取り消そう</li>
<li>定期的にリストをチェックして使ってないアプリは全部取り消そう</li>
<li>犯人がわからない時はアプリの許可を全部取り消せばとりあえず問題解決</li>
</ul>


<h2>さいごに</h2>

<p>OAuthは、ユーザIDやパスワードを漏らすこと無く、他のアプリにアクセス権を与える仕組みで、
過去にあった <strong>IDとパスワードを保存して代理アクセスするアプリ</strong> に比べたら <strong>格段に安全</strong> な手段です。
エンジニア視点からしても、<strong>知らなくていいこと(パスワード)を知らないままでいられる</strong> 非常に便利な仕組みで、
今後さまざまなサービスがOAuthでのアクセスを提供するようになると思います。
そういう時代なので上記の内容を最低限知っておいたほうがいいと思います。</p>

<p>ただやはり気軽に許可できるものではないので、アプリを許可する際はよく読んでよく考えてよく疑ってかかりましょう。</p>

<p>あとOpenIDは事実上死んでいるので <strong>何もできないOAuth</strong> として再定義されるべきだと思います。</p>
]]></content>
  </entry>
  
</feed>
